[tox]
envlist =
    check
    docs
    nightlies
    nightlies-xarray
    {minimal,xarray,full}{,-coverage}
# nightlies-xarray is for github actions to run the job in the respective python
# if env var xarray is set
# See https://tox.readthedocs.io/en/latest/example/package.html#flit
isolated_build = True
isolated_build_env = build

[gh-actions]
python =
    3.11: coverage
    3.12: coverage, nightlies
    3.13: coverage

[gh-actions:env]
JOB =
    minimal: minimal
    xarray: xarray
    full: full

[testenv]
basepython =
    # See https://github.com/tox-dev/tox/issues/1548
    {minimal,xarray,full,nightlies,check,docs,cleandocs,viewdocs}: python3
setenv =
    PYTHONUNBUFFERED = yes
    PYTEST_EXTRA_ARGS = -s
    coverage: PYTEST_EXTRA_ARGS = --cov --cov-report xml --cov-report term
passenv =
    *
allowlist_externals = pytest
commands =
    pytest {env:PYTEST_MARKERS:} {env:PYTEST_EXTRA_ARGS:} {posargs:-vv}

[testenv:full]
description = Run tests with all dependencies (importorskip will raise on missing dep)
extras =
    test-xarray
    xarray
    numba
setenv =
    ARVIZ_REQUIRE_ALL_DEPS=TRUE

[testenv:full-coverage]
base =
    full
    testenv

[testenv:minimal]
description = Run tests with minimal install (numpy+scipy only)
extras = test

[testenv:minimal-coverage]
base =
    minimal
    testenv

[testenv:xarray]
description = Run tests with arviz-stats[xarray] install
extras =
  test-xarray
  xarray

[testenv:xarray-coverage]
base =
    xarray
    testenv

[testenv:nightlies]
description = Run xarray test job with nightly pre-releases of scientific python packages
base =
    xarray
    testenv
install_command = python -I -m pip install --extra-index-url https://pypi.anaconda.org/scientific-python-nightly-wheels/simple {opts} {packages}
pip_pre = true
# Setting this env var following arviz-base in case we want to skip some tests in nightlies
setenv =
  NIGHTLIES=TRUE

[testenv:nightlies-xarray]
base = nightlies

[testenv:check]
description = perform style checks
deps =
    build
    pre-commit
    pylint
skip_install = true
commands =
    pre-commit install
    pre-commit run --all-files --show-diff-on-failure
    python -m build

[testenv:docs]
description = build HTML docs
setenv =
    READTHEDOCS_PROJECT = arviz_stats
    READTHEDOCS_VERSION = latest
extras =
    doc
    xarray
commands =
    sphinx-build -d "{toxworkdir}/docs_doctree" docs/source "{toxworkdir}/docs_out" --color -v -bhtml

[testenv:cleandocs]
description = clean HTML outputs docs
skip_install = true
allowlist_externals = rm
commands =
    rm -r "{toxworkdir}/docs_out" "{toxworkdir}/docs_doctree" "{toxworkdir}/jupyter_execute" docs/source/api/generated docs/source/contributing/generated

[testenv:viewdocs]
description = open HTML docs
skip_install = true
commands =
    python -m webbrowser "{toxworkdir}/docs_out/index.html"
